[{"name":"app.R","content":"library(shinydashboard) # Estructura de la página\r\nlibrary(shinyjs)  # Para usar funciones de JavaScript (botones)\r\nlibrary(ggplot2) # Crear gráficos y ponerlos bonitos\r\nlibrary(dplyr) #calcular media, moda, mediana y demas\r\n\r\n# Cargar los datos de la base de datos\r\ntwins <- read.csv(\"twins.txt\", header = TRUE)\r\n\r\n# Calcular las variables necesarias para el reporte\r\nnum_registros <- nrow(twins) # registros en la base original\r\nnum_variables <- ncol(twins) # variables\r\n\r\n\r\n# Convierte las 16 columnas en numeric \r\ncols_to_convert <- c(\"DLHRWAGE\", \"DEDUC1\", \"AGE\", \"AGESQ\", \"HRWAGEH\", \"WHITEH\", \"MALEH\", \r\n                     \"EDUCH\", \"HRWAGEL\", \"WHITEL\", \"MALEL\", \"EDUCL\", \"DEDUC2\", \"DTEN\", \r\n                     \"DMARRIED\", \"DUNCOV\")\r\ntwins[cols_to_convert] <- lapply(twins[cols_to_convert], as.numeric)\r\n\r\n# Crear una nueva tabla sin NAs\r\ntwins_comp <- na.omit(twins) # datos con registros completos\r\n\r\n#calcular la dimension de la tabla\r\ndim_datos<- paste(\"Número de filas:\", dim(twins_comp)[1], \"\\nNúmero de columnas:\", dim(twins_comp)[2])\r\n\r\n\r\n# Discretizar años de educación del gemelo 1 y el gemelo 2 \r\n\r\n#Según nivel educativo:\r\ntwins_comp$EDUCH_disc_edu <- cut(twins_comp$EDUCH, breaks = c(0,6,12,16,22), labels = c(\"Primaria (0-6]\", \"Secundaria (6-12]\", \"Pregrado (13-16]\", \"Posgrado (17-22]\"))\r\ntwins_comp$EDUCL_disc_edu <- cut(twins_comp$EDUCL, breaks = c(0,6,12,16,22), labels = c(\"Primaria (0-6]\", \"Secundaria (6-12]\", \"Pregrado (13-16]\", \"Posgrado (17-22]\"))\r\n\r\n#Según cuartiles:\r\ntwins_comp$EDUCH_disc_cua <- cut(twins_comp$EDUCH, breaks = c(0,12,14,16,20), labels = c(\"Q1 (0-12]\", \"Q2 (12-14]\", \"Q3 (14-16]\", \"Q4 (16-20]\"))\r\ntwins_comp$EDUCL_disc_cua <- cut(twins_comp$EDUCL, breaks = c(0,12,14,16,20), labels = c(\"Q1 (0-12]\", \"Q2 (12-14]\", \"Q3 (14-16]\", \"Q4 (16-20]\"))\r\n\r\n\r\n# Función para calcular los cuartiles, mínimos y máximos\r\nsummary_stats <- function(data, var) {\r\n  q <- quantile(data[[var]], na.rm = TRUE)  # Calcular los cuantiles (cuartiles) del conjunto de datos para la variable especificada, ignorando los valores NA\r\n  list(\r\n    Min = min(data[[var]], na.rm = TRUE),  # Calcular el valor mínimo de la variable, ignorando los valores NA\r\n    Q1 = q[2],  # Primer cuartil (Q1)\r\n    Median = q[3],  # Mediana (Q2)\r\n    Q3 = q[4],  # Tercer cuartil (Q3)\r\n    Max = max(data[[var]], na.rm = TRUE)  # Calcular el valor máximo de la variable, ignorando los valores NA\r\n  )\r\n}\r\n\r\n# Función para obtener las unidades de medida de la variable\r\nget_units <- function(variable) {\r\n  if (variable %in% c(\"EDUCH\", \"EDUCL\")) {  # Si la variable es EDUCH o EDUCL\r\n    return(\"Años\")  # La unidad es \"Años\"\r\n  } else if (variable %in% c(\"HRWAGEH\", \"HRWAGEL\")) {  # Si la variable es HRWAGEH o HRWAGEL\r\n    return(\"$\")  # La unidad es \"$\" (dólares)\r\n  } else {\r\n    return(\"unidades\")  # Para otras variables, la unidad es \"unidades\"\r\n  }\r\n}\r\n\r\n# Calcular las estadísticas resumen para la variable EDUCH en el conjunto de datos twins_comp\r\neduch_stats <- summary_stats(twins_comp, \"EDUCH\")\r\n\r\n# Calcular las estadísticas resumen para la variable HRWAGEH en el conjunto de datos twins_comp\r\nhrwageh_stats <- summary_stats(twins_comp, \"HRWAGEH\")\r\n\r\n\r\n# Definir la interfaz de usuario (UI)\r\nui <- dashboardPage(\r\n  # Definir la cabecera del dashboard\r\n  dashboardHeader(title = \"Visualización de datos\"),\r\n  \r\n  # Definir la barra lateral del dashboard\r\n  dashboardSidebar(\r\n    sidebarMenu(\r\n      menuItem(\"Introduccion\", tabName = \"Introduccion\", icon = icon(\"pencil\")),  # Menú para la sección de introducción\r\n      menuItem(\"Gráficos\", tabName = \"graficos\", icon = icon(\"chart-line\")),      # Menú para la sección de gráficos\r\n      menuItem(\"Resumen De Estadísticos\", tabName = \"analisis\", icon = icon(\"chart-bar\"))  # Menú para la sección de análisis estadístico\r\n    )\r\n  ),\r\n  \r\n  # Definir el cuerpo del dashboard\r\n  dashboardBody(\r\n    useShinyjs(),  # Inicializar shinyjs para utilizar funciones JavaScript en la aplicación\r\n    tabItems(\r\n      # Contenido de la pestaña de introducción\r\n      tabItem(\r\n        tabName = \"Introduccion\",\r\n        fluidRow(\r\n          box(\r\n            h2(\"Visualización de datos con DotChart: ¿Influye la escolaridad en el salario? Un estudio con gemelos Monocigóticos\"),  # Título del cuadro\r\n            width = 12,  # Ancho del cuadro\r\n            actionButton(\"toggleTable\", \"Mostrar Base de datos usada\"),  # Botón para mostrar u ocultar la tabla\r\n            hidden(\r\n              div(id = \"tabla_container\",  # Contenedor de la tabla, inicialmente oculto\r\n                  tableOutput(\"tabla_twins\")  # Salida de la tabla que muestra los datos de los gemelos\r\n              )\r\n            ),\r\n            uiOutput(\"texto_introduccion\")  # Salida del texto con la información de introducción\r\n          )\r\n        )\r\n      ),\r\n      \r\n      # Contenido de la pestaña de gráficos\r\n      tabItem(\r\n        tabName = \"graficos\",\r\n        fluidRow(\r\n          box(\r\n            title = \"Discretizados según nivel educativo\",  # Título del cuadro para gráficos discretizados por nivel educativo\r\n            width = 6,  # Ancho del cuadro\r\n            actionButton(\"botongraficosdiscretizados\", \"Mostrar Gráficos\"),  # Botón para mostrar u ocultar los gráficos discretizados por nivel educativo\r\n            hidden(\r\n              div(id = \"graficos_nivedu\",  # Contenedor de los gráficos discretizados por nivel educativo, inicialmente oculto\r\n                  plotOutput(\"dotchart_discretizadoedu_gemelo1\"),  # Salida del gráfico discretizado por nivel educativo para el gemelo 1\r\n                  plotOutput(\"dotchart_discretizadoedu_gemelo2\")   # Salida del gráfico discretizado por nivel educativo para el gemelo 2\r\n              )\r\n            )\r\n          ),\r\n          box(\r\n            title = \"Discretizados según cuartiles\",  # Título del cuadro para gráficos discretizados por cuartiles\r\n            width = 6,  # Ancho del cuadro\r\n            actionButton(\"botongraficos\", \"Mostrar Gráficos\"),  # Botón para mostrar u ocultar los gráficos discretizados por cuartiles\r\n            hidden(\r\n              div(id = \"graficos_cuartiles\",  # Contenedor de los gráficos discretizados por cuartiles, inicialmente oculto\r\n                  plotOutput(\"dotchart_discretizadocua_gemelo1\"),  # Salida del gráfico discretizado por cuartiles para el gemelo 1\r\n                  plotOutput(\"dotchart_discretizadocua_gemelo2\")   # Salida del gráfico discretizado por cuartiles para el gemelo 2\r\n              )\r\n            )\r\n          )\r\n        ),\r\n        fluidRow(\r\n          box(\r\n            title = \"Análisis\",  # Título del cuadro de análisis\r\n            width = 12,  # Ancho del cuadro\r\n            uiOutput(\"texto_analisis\"),\r\n            uiOutput(\"texto_analisis_1\"),\r\n            uiOutput(\"texto_analisis_2\"),\r\n            uiOutput(\"texto_analisis_3\"),\r\n            actionButton(\"botongraficossindisc\", \"Mostrar Gráficos sin discretizar\"),# Botón para mostrar u ocultar los gráficos discretizados por cuartiles\r\n            hidden(\r\n              div(id = \"graficos_sindisc\",  # Contenedor de los gráficos discretizados por cuartiles, inicialmente oculto\r\n                  fluidRow(\r\n                    column(width = 6, plotOutput(\"dotchart_1\")),  # Primera columna con el primer gráfico\r\n                    column(width = 6, plotOutput(\"dotchart_2\"))   # Segunda columna con el segundo gráfico\r\n                  )\r\n              )\r\n            )\r\n          )\r\n        )\r\n      ),\r\n      \r\n      # Contenido de la pestaña de análisis estadístico\r\n      tabItem(\r\n        tabName = \"analisis\",\r\n        fluidRow(\r\n          column(\r\n            width = 6,\r\n            box(\r\n              title = \"Medidas de Dispersión del Gemelo 1\",  # Título del cuadro para medidas de dispersión del gemelo 1\r\n              width = 12,\r\n              selectInput(\"variable_gemelo1\", \"Seleccionar variable:\",  # Selector de variable para el gemelo 1\r\n                          choices = c(\"Años de educación (EDUCL)\" = \"EDUCL\", \"Salario por Hora (HRWAGEL)\" = \"HRWAGEL\")),  # Opciones del selector\r\n              verbatimTextOutput(\"centros_gemelo1\"),  # Salida de medidas centrales para el gemelo 1\r\n              verbatimTextOutput(\"dispersion_gemelo1\"),  # Salida de medidas de dispersión para el gemelo 1\r\n              verbatimTextOutput(\"cuartiles_gemelo1\")  # Salida de cuartiles para el gemelo 1\r\n            )\r\n          ),\r\n          column(\r\n            width = 6,\r\n            box(\r\n              title = \"Medidas de Dispersión del Gemelo 2\",  # Título del cuadro para medidas de dispersión del gemelo 2\r\n              width = 12,\r\n              selectInput(\"variable_gemelo2\", \"Seleccionar variable:\",  # Selector de variable para el gemelo 2\r\n                          choices = c(\"Años de educación (EDUCH)\" = \"EDUCH\", \"Salario por Hora (HRWAGEH)\" = \"HRWAGEH\")),  # Opciones del selector\r\n              verbatimTextOutput(\"centros_gemelo2\"),  # Salida de medidas centrales para el gemelo 2\r\n              verbatimTextOutput(\"dispersion_gemelo2\"),  # Salida de medidas de dispersión para el gemelo 2\r\n              verbatimTextOutput(\"cuartiles_gemelo2\")  # Salida de cuartiles para el gemelo 2\r\n            )\r\n          )\r\n        )\r\n      )\r\n    )\r\n  )\r\n)\r\n\r\n# Definir la lógica del servidor\r\nserver <- function(input, output) {\r\n  output$tabla_twins <- renderTable({\r\n    twins_comp\r\n  })\r\n  \r\n  # Mostrar texto en la pestaña de Introducción\r\n  output$texto_introduccion <- renderUI({\r\n    fluidRow(  # Crear una fila fluida para organizar el contenido\r\n      box(  # Caja para contener el contenido\r\n        width = 12,  # Ancho de la caja (12 columnas, ocupando toda la fila)\r\n        h4(\"Objetivo:\"),\r\n        textOutput(\"intro_paragraph\"),\r\n        h4(\"Información de los registros:\"),\r\n        tableOutput(\"data_summary\"),  # Salida de tabla para mostrar el resumen de datos\r\n        br(),\r\n        p(\"Isabella Gutiérrez, Samuel Rojas y Simón Vélez\"), \r\n        p(\"Universidad del Rosario\"), \r\n        p(\"Probabilidad y Estadística I\"),\r\n        p(\"2024-I\"),\r\n        footer = tagList(  # Pie de página de la caja que contendrá una lista de elementos\r\n          br(),\r\n          h4(\"¿De dónde vienen los datos?\"),\r\n          p(\"Ashenfelter, Orley and Krueger, Alan. Estimates of the Economic Return to Schooling from a New Sample of Twins.\r\n        The American Economic Review 84.5 (Dic. 1994) 1157-1173.\")\r\n        )\r\n      )\r\n    )\r\n  })\r\n  \r\n  # Generar el texto introductorio\r\n  output$intro_paragraph <- renderText({\r\n    \"Se desea estudiar la incidencia de los años de escolaridad en el ingreso por hora, para lo cual, se cuenta con la información de pares de gemelos monocigóticos mayores de 18 años respecto a diversas variables sociodemográficas de interés.\"\r\n  })\r\n  \r\n  \r\n  #renderizar el texto de analisis\r\n  output$texto_analisis <- renderUI({\r\n    fluidRow(  # Crear una fila fluida para organizar el contenido\r\n      box(  # Caja para contener el contenido\r\n        width = 12,  # Ancho de la caja (12 columnas, ocupando toda la fila)\r\n        textOutput(\"intro_analisis_1\"),\r\n        br(),\r\n        textOutput(\"intro_analisis_2\"),\r\n        br(),\r\n        textOutput(\"intro_analisis_3\"),\r\n        br(),\r\n        textOutput(\"intro_analisis_4\")\r\n      )\r\n    )\r\n  })\r\n  \r\n  # texto analisis\r\n  output$intro_analisis_1 <- renderText({\r\n    \"Se utilizó un gráfico de dotchart que facilita la relación entre dos variables salario por hora y años de educación, esto porque los dot plots representan cada dato individualmente, siendo esta última una característica a destacar en la implementación de este mismo, permitiendo así una comprensión precisa de la distribución y frecuencia de los datos, algo que solo es posible debido a que la base de datos empleada no es tan extensa, ya que una base de datos mucho más amplia generaría un impedimento para la limpia visualización de la gráfica.Para el uso de éste tipo de gráfico fue necesario discretizar la variable de años de educación, puesto que los valores continuos pueden ser muy amplios, \r\n    lo que limita representarlos cada uno como un punto individual.\"})\r\n  \r\n  output$intro_analisis_2 <- renderText({\r\n    \"Ambas gráficas evidencian que a medida que aumentan los años de educación, los salarios también tienden a aumentar. Esto es particularmente evidente en los intervalos más altos de años de educación (16-22), en donde encontramos la mayor media de salario entre los niveles de educación, sin embargo, indican un aumento en la desviación estándar, lo que significa que puede no ser beneficioso para aquellas personas que tienen más años de educación,\r\n    puesto que sus salarios se pueden igualar o superar con un nivel de educación menor.\"})\r\n  output$intro_analisis_3 <- renderText({\r\n    \"En primer lugar, realizando una comparación entre las dos gráficas discretizadas, en la gráfica del gemelo 1 podemos observar que hay menor varianza en los datos, es decir cumple con el análisis de las gráficas anteriormente mencionado, por lo que en la gráfica se aprecia una  gran cantidad de puntos concentrados en un mismo intervalo de salario,lo que los vuelve más representativos. En cambio, en la gráfica de los gemelos 2, presentan coeficiente de variación mayor en los intervalos de salario con respecto a los intervalos de la edad, es decir, hay más datos alejados a la media,lo que implica una media menos representativa.\r\n    Por otra parte, las medidas de dispersión indican que la mayor parte de gemelos encuestados obtuvieron como máximo nivel de educación la secundaria, (12 años), por lo que la moda del salario se encuentra en $5 provenientes mayoritariamente de los gemelos con esta educación.\"})\r\n  output$intro_analisis_4 <- renderText({\r\n    \"En segundo lugar, en la gráfica dividida por cuartiles se puede ver con mayor detalle, los datos atípicos en las dos gráficas, es decir, datos muy alejados de la media. En la gráfica de los gemelos 1 teniendo una mayor cantidad de años estudiados, el promedio del salario se mantiene en el mismo intervalo de 0 a 25 dólares por hora, siendo solamente 7  los gemelos que superan a este mismo, lo que implica que estos datos son más representativos para generar conclusiones al respecto del sueldo de los gemelos 1,\r\n    sin embargo en la gráfica de los gemelos 2 hay mayor cantidad de datos atípicos por intervalos, lo que se vuelve menos representativo para las conclusiones.\"})\r\n  \r\n  \r\n  # Generar la tabla resumen de los datos\r\n  output$data_summary <- renderTable({\r\n    data.frame(\r\n      \"Número de registros\" = nrow(twins),  # Número total de registros en el conjunto de datos\r\n      \"Número de variables\" = ncol(twins),  # Número total de variables en el conjunto de datos\r\n      \"Registros con información completa\" = nrow(twins_comp),  # Número de registros con información completa\r\n      \"Registros con información incompleta\" = nrow(twins) - nrow(twins_comp),  # Número de registros con información incompleta\r\n      \"Dimensión de la base de datos con la información completa\" = dim_datos  # Dimensiones del conjunto de datos con información completa\r\n    )\r\n  })\r\n  \r\n  \r\n  \r\n  \r\n  # Controlar la visibilidad de la tabla ___introduccion \r\n  observeEvent(input$toggleTable, {\r\n    toggle(\"tabla_container\")\r\n  })\r\n  \r\n  # Controlar la visibilidad de las gráficas discretizadas por cuartiles\r\n  observeEvent(input$botongraficos, {\r\n    toggle(\"graficos_cuartiles\")\r\n  })\r\n  \r\n  # Controlar la visibilidad de las gráficas discretizadas por nivel educativo\r\n  observeEvent(input$botongraficosdiscretizados, {\r\n    toggle(\"graficos_nivedu\")\r\n  })\r\n  \r\n  # Controlar la visibilidad de las gráficas sin discretizar\r\n  observeEvent(input$botongraficossindisc, {\r\n    toggle(\"graficos_sindisc\")\r\n  })\r\n  \r\n  \r\n  # Gráfico 1\r\n  output$dotchart_1 <- renderPlot({\r\n    ggplot(twins_comp, aes(x = EDUCL, y = HRWAGEL)) +\r\n      geom_dotplot(binaxis = 'y', stackdir = 'center', dotsize = 1, color = \"blue\") +\r\n      labs(title = \"Dotchart de gemelo 1 sin discretizar\", x = \"Años de educación\", y = \"Salario por hora ($)\") +\r\n      theme_minimal() \r\n  })\r\n  \r\n  # Gráfico 2\r\n  output$dotchart_2 <- renderPlot({\r\n    ggplot(twins_comp, aes(x = EDUCH, y = HRWAGEH)) +\r\n      geom_dotplot(binaxis = 'y', stackdir = 'center', dotsize = 0.5, color = \"red\") +\r\n      labs(title = \"Dotchart de gemelo 2 sin discretizar\", x = \"Años de educación\", y = \"Salario por hora ($)\") +\r\n      theme_minimal()\r\n  })\r\n  \r\n  \r\n  # Gráfico discretizado según educación gemelo 1\r\n  output$dotchart_discretizadoedu_gemelo1 <- renderPlot({\r\n    ggplot(twins_comp, aes(x = EDUCL_disc_edu, y = HRWAGEL)) +\r\n      geom_dotplot(binaxis = 'y', stackdir = 'center', dotsize = 0.5, color = \"green\") +\r\n      labs(title = \"Dotchart Discretizado según nivel educativo de Gemelo 1\", x = \"Años de educación (Discretizado según nivel educativo)\", y = \"Salario por hora ($)\") +\r\n      theme_minimal()+stat_summary(fun.data=data_summary, color=\"red\")\r\n  })\r\n  # Gráfico discretizado según educación gemelo 2\r\n  output$dotchart_discretizadoedu_gemelo2 <- renderPlot({\r\n    ggplot(twins_comp, aes(x = EDUCH_disc_edu, y = HRWAGEH)) +\r\n      geom_dotplot(binaxis = 'y', stackdir = 'center', dotsize = 0.5, color = \"purple\") +\r\n      labs(title = \"Dotchart Discretizado según nivel educativo de Gemelo 2\", x = \"Años de educación (Discretizado según nivel educativo)\", y = \"Salario por hora ($)\") +\r\n      theme_minimal()+stat_summary(fun.data=data_summary, color=\"red\")\r\n  })\r\n  \r\n  # Gráfico discretizado por cuartiles gemelo 1\r\n  output$dotchart_discretizadocua_gemelo1 <- renderPlot({\r\n    ggplot(twins_comp, aes(x = EDUCL_disc_cua, y = HRWAGEL)) +\r\n      geom_dotplot(binaxis = 'y', stackdir = 'center', dotsize = 0.5, color = \"blue\") +\r\n      labs(title = \"Dotchart Discretizado por intervalos de Gemelo 1\", x = \"Años de educación (Discretizado por cuartiles)\", y = \"Salario por hora ($)\") +\r\n      theme_minimal()+stat_summary(fun.data=data_summary, color=\"red\")\r\n  })\r\n  # Gráfico discretizado por cuartiles gemelo 2\r\n  output$dotchart_discretizadocua_gemelo2 <- renderPlot({\r\n    ggplot(twins_comp, aes(x = EDUCH_disc_cua, y = HRWAGEH)) +\r\n      geom_dotplot(binaxis = 'y', stackdir = 'center', dotsize = 0.5, color = \"orange\") +\r\n      labs(title = \"Dotchart Discretizado por intervalos de Gemelo 2\", x = \"Años de educación (Discretizado por cuartiles)\", y = \"Salario por hora ($)\") +\r\n      theme_minimal()+stat_summary(fun.data=data_summary, color=\"red\")\r\n  })\r\n  \r\n  # Calcular medidas de dispersión para gemelo 1\r\n  output$dispersion_gemelo1 <- renderText({\r\n    req(input$variable_gemelo1)\r\n    var <- input$variable_gemelo1\r\n    dispersion_result <- twins_comp[[var]]\r\n    units <- get_units(var)\r\n    \r\n    dispersion <- sprintf(\"Dispersión: %.2f %s\", round(sd(dispersion_result, na.rm = TRUE), 2), units)\r\n    rango <- sprintf(\"Rango: %.2f %s\", round(diff(range(dispersion_result, na.rm = TRUE)), 2), units)\r\n    varianza <- sprintf(\"Varianza: %.2f %s^2\", round(var(dispersion_result, na.rm = TRUE), 2), units)\r\n    desviacion_estandar <- sprintf(\"Desviación Estándar: %.2f %s\", round(sd(dispersion_result, na.rm = TRUE), 2), units)\r\n    coeficiente_variacion <- sprintf(\"Coeficiente de Variación: %.2f %%\", round(sd(dispersion_result, na.rm = TRUE) / mean(dispersion_result, na.rm = TRUE), 2) * 100)\r\n    \r\n    paste(dispersion, rango, varianza, desviacion_estandar, coeficiente_variacion, sep = \"\\n\")\r\n  })\r\n  # Calcular medidas de dispersión para gemelo 2\r\n  output$dispersion_gemelo2 <- renderText({\r\n    req(input$variable_gemelo2)\r\n    var <- input$variable_gemelo2\r\n    dispersion_result <- twins_comp[[var]]\r\n    units <- get_units(var)\r\n    \r\n    dispersion <- sprintf(\"Dispersión: %.2f %s\", round(sd(dispersion_result, na.rm = TRUE), 2), units)\r\n    rango <- sprintf(\"Rango: %.2f %s\", round(diff(range(dispersion_result, na.rm = TRUE)), 2), units)\r\n    varianza <- sprintf(\"Varianza: %.2f %s^2\", round(var(dispersion_result, na.rm = TRUE), 2), units)\r\n    desviacion_estandar <- sprintf(\"Desviación Estándar: %.2f %s\", round(sd(dispersion_result, na.rm = TRUE), 2), units)\r\n    coeficiente_variacion <- sprintf(\"Coeficiente de Variación: %.2f %%\", round(sd(dispersion_result, na.rm = TRUE) / mean(dispersion_result, na.rm = TRUE), 2) * 100)\r\n    \r\n    paste(dispersion, rango, varianza, desviacion_estandar, coeficiente_variacion, sep = \"\\n\")\r\n  })\r\n  \r\n  \r\n  # Mostrar cuartiles para gemelo 1\r\n  output$cuartiles_gemelo1 <- renderText({\r\n    req(input$variable_gemelo1)\r\n    variable_gemelo1 <- input$variable_gemelo1\r\n    stats <- summary_stats(twins_comp, variable_gemelo1)\r\n    units <- get_units(variable_gemelo1)\r\n    \r\n    paste(\"Mínimo:\", stats$Min, units, \"\\n\",\r\n          \"Cuartil 1:\", stats$Q1, units, \"\\n\",\r\n          \"Cuartil 2:\", stats$Median, units, \"\\n\",\r\n          \"Cuartil 3:\", stats$Q3, units, \"\\n\",\r\n          \"Máximo:\", stats$Max, units\r\n    )\r\n  })\r\n  \r\n  # Mostrar cuartiles para gemelo 2\r\n  output$cuartiles_gemelo2 <- renderText({\r\n    req(input$variable_gemelo2)\r\n    variable_gemelo2 <- input$variable_gemelo2\r\n    stats <- summary_stats(twins_comp, variable_gemelo2)\r\n    units <- get_units(variable_gemelo2)\r\n    \r\n    paste(\"Mínimo:\", stats$Min, units, \"\\n\",\r\n          \"Cuartil 1:\", stats$Q1, units, \"\\n\",\r\n          \"Cuartil 2:\", stats$Median, units, \"\\n\",\r\n          \"Cuartil 3:\", stats$Q3, units, \"\\n\",\r\n          \"Máximo:\", stats$Max, units\r\n    )\r\n  })\r\n  \r\n  # Función unificada para moda, media y mediana del gemelo 1\r\n  output$centros_gemelo1 <- renderText({\r\n    req(input$variable_gemelo1)\r\n    \r\n    variable <- input$variable_gemelo1\r\n    moda <- as.numeric(names(sort(table(twins_comp[[variable]]), decreasing = TRUE))[1])\r\n    media <- mean(twins_comp[[variable]], na.rm = TRUE)\r\n    mediana <- median(twins_comp[[variable]], na.rm = TRUE)\r\n    units <- get_units(variable)\r\n    \r\n    paste(\"Moda de\", variable, \":\", moda, units, \"\\n\",\r\n          \"Media de\", variable, \":\", round(media, 2), units, \"\\n\",\r\n          \"Mediana de\", variable, \":\", round(mediana, 2), units)\r\n  })\r\n  \r\n  # Función unificada para moda, media y mediana del gemelo 1\r\n  output$centros_gemelo2 <- renderText({\r\n    req(input$variable_gemelo1)\r\n    \r\n    variable <- input$variable_gemelo2\r\n    moda <- as.numeric(names(sort(table(twins_comp[[variable]]), decreasing = TRUE))[1])\r\n    media <- mean(twins_comp[[variable]], na.rm = TRUE)\r\n    mediana <- median(twins_comp[[variable]], na.rm = TRUE)\r\n    units <- get_units(variable)\r\n    \r\n    paste(\"Moda de\", variable, \":\", moda, units, \"\\n\",\r\n          \"Media de\", variable, \":\", round(media, 2), units, \"\\n\",\r\n          \"Mediana de\", variable, \":\", round(mediana, 2), units)\r\n  })\r\n  \r\n  # Función para mostrar la media y la meida +/- sd\r\n  data_summary <- function(x) {\r\n    m <- mean(x)\r\n    ymin <- m-sd(x)\r\n    ymax <- m+sd(x)\r\n    return(c(y=m,ymin=ymin,ymax=ymax))\r\n  }\r\n}\r\n# Ejecutar la aplicación Shiny\r\nshinyApp(ui = ui, server = server)\r\n\r\n\r\n","type":"text"},{"name":"librerias.R","content":"# Librerías necesarias para ejecutar el aplicativo.\r\nlibrary(shinydashboard) # Estructura de la página\r\nlibrary(shinyjs)  # Para usar funciones de JavaScript (botones)\r\nlibrary(ggplot2) # Crear gráficos y ponerlos bonitos\r\nlibrary(dplyr) #calcular media, moda, mediana y demas\r\nlibrary(shinylive)\r\nlibrary(httpuv)\r\n\r\n## PENDIENTE\r\n","type":"text"},{"name":"twins.txt","content":"DLHRWAGE,DEDUC1,AGE,AGESQ,HRWAGEH,WHITEH,MALEH,EDUCH,HRWAGEL,WHITEL,MALEL,EDUCL,DEDUC2,DTEN,DMARRIED,DUNCOV\r\n0.2593466,0,33.25119781,1105.642156,11.25,1,0,16,8.68,1,0,16,0,1.333,0,0\r\n.,-1,54.05338809,2921.768764,.,1,0,9,7.85,1,0,10,1,8,1,0\r\n0.721318058,7,43.57015743,1898.358618,18,1,0,19,8.75,1,0,12,4,3,-1,0\r\n0.011581964,0,30.96783025,959.0065106,16.5,1,1,12,16.31,1,1,12,0,-2,0,1\r\n-0.560984677,0,34.63381246,1199.500965,9.6154,1,1,14,16.85,1,1,14,1,2.917,0,-1\r\n.,2,71.60301164,5126.991275,.,1,0,16,.,1,0,14,-2,24,1,0\r\n1.523260216,-2,34.97878166,1223.515166,35,1,0,13,7.63,1,0,15,-2,3,1,0\r\n.,-1,61.45106092,3776.232888,35,1,0,13,.,1,0,14,-2,25.5,0,0\r\n-0.223143551,-2,29.33880904,860.7657156,12,1,1,12,15,1,1,14,1,1,-1,0\r\n-0.470003629,0,47.60574949,2266.307384,6.25,1,0,12,10,1,0,12,0,-5,0,0\r\n0.051751065,-1,51.90143737,2693.759201,17.25,1,1,12,16.38,1,1,13,-2,9,0,0\r\n0.287682073,0,36.07665982,1301.525384,16,1,1,12,12,1,1,12,0,5,0,0\r\n.,4,32.08213552,1029.26342,.,1,0,16,31.25,1,0,12,4,-9.5,0,0\r\n-0.470003629,-2,48.12046544,2315.579194,15.625,1,0,17,25,1,0,19,-3,-7,0,0\r\n0.305601229,2,33.95482546,1152.930172,9.76,1,0,14,7.19,1,0,12,2,.,0,-1\r\n.,4,36.04106776,1298.958565,.,1,0,18,.,1,0,14,4,.,-1,0\r\n-0.336472237,0,27.17590691,738.5299166,1.785714286,1,0,16,2.5,1,0,16,0,0.417,0,0\r\n.,1,24.54483231,602.448793,5.25,1,1,13,.,1,1,12,0,.,1,0\r\n0.628608659,2,39.34017796,1547.649602,15,1,1,14,8,1,1,12,-2,15,1,1\r\n0.321583624,1,38.53251198,1484.754479,15,1,1,13,10.875,1,1,12,-1,0,0,0\r\n.,0,24.65708419,607.9718007,8.7,1,0,12,.,1,0,12,0,-2,0,1\r\n-0.378653851,1,23.68240931,560.8565107,11.41304348,1,0,17,16.66666667,1,0,16,1,-0.5,0,1\r\n-0.078555719,3,35.66324435,1271.866998,13.46,1,0,15,14.56,1,0,12,2,4,0,-1\r\n-0.3254224,0,21.34976044,455.8122708,6.5,0,1,14,9,0,1,14,0,-0.083,0,0\r\n.,1,28.90075291,835.2535187,8.583333333,1,1,15,.,1,1,14,-1,0,0,0\r\n.,0,30.00684463,900.4107245,13,1,1,12,.,1,1,12,0,0,0,0\r\n-0.494696242,0,33.63997262,1131.647758,10,1,0,12,16.4,1,0,12,0,-6.5,-1,-1\r\n0.497032302,2,24.64065708,607.1619815,12,1,0,16,7.3,1,0,14,-2,-1,0,-1\r\n0.167054085,0,46.36550308,2149.759876,7.15,1,0,12,6.05,1,0,12,0,1,0,0\r\n-1.446918983,-5,43.85489391,1923.25172,8,1,1,15,34,1,1,20,-6,-2,0,0\r\n2.014903021,0,61.87268994,3828.22976,37.5,0,1,12,5,0,1,12,0,25,0,1\r\n1.504077397,0,24.11772758,581.6647838,22.5,1,1,16,5,1,1,16,0,1.5,0,1\r\n.,0,61.51676934,3784.31291,25,1,1,12,.,1,1,12,0,30,0,1\r\n0.087011377,3,32.59411362,1062.376243,12,1,1,14,11,1,1,11,1,-1.5,1,-1\r\n0.287682073,0,53.85352498,2900.202153,16,1,1,12,12,1,1,12,0,24,0,0\r\n-0.382992252,-2,44.01916496,1937.686883,15,1,1,16,22,1,1,18,2,14.75,-1,1\r\n-0.478035801,-6,39.61943874,1569.699926,15.5,0,1,12,25,0,1,18,-4,-1,0,0\r\n1.034073768,0,22.07255305,487.197598,18.75,0,1,16,6.666666667,0,1,16,0,0.083,0,0\r\n0.271933716,0,38.02600958,1445.977405,15,1,0,12,11.42857143,1,0,12,0,0.5,0,0\r\n-1.071583616,-2,53.63723477,2876.952954,6.849315069,1,1,12,20,1,1,14,-2,-19,0,0\r\n0.108216442,0,28.32306639,802.1960899,15,1,0,16,13.4615,1,0,16,0,2,0,-1\r\n0.145851877,0,29.86173854,891.7234284,7,1,0,12,6.05,1,0,12,-1,-7,0,0\r\n-0.348306694,-2,36.98562628,1367.936552,10,1,1,14,14.16666667,1,1,16,-2,-2,0,0\r\n0.600437783,0,44.23271732,1956.533281,41.66666667,0,0,18,22.85714286,0,0,18,-2,-4,0,0\r\n-0.133912418,0,22.15468857,490.8302256,4.1,1,0,16,4.6875,1,0,16,0,-1.875,0,0\r\n-0.096387521,0,40.04928131,1603.944934,20,1,0,13,22.02371429,1,0,13,0,0,0,0\r\n-0.510825624,-1,53.66461328,2879.890718,57.69225,1,1,14,96.15375,1,1,15,1,-12,0,0\r\n0.55005167,-1,35.20054757,1239.078549,20,1,0,16,11.5384,1,0,17,0,-3.5,0,0\r\n0.246860078,-4,61.15811088,3740.314527,16,1,1,12,12.5,1,1,16,-4,24.5,0,1\r\n0.277631737,0,37.2183436,1385.2051,6.6,1,1,12,5,1,1,12,-1,-14.25,0,0\r\n0.182321557,0,52.93360712,2801.966763,40,1,1,20,33.33333333,1,1,20,-1,21,0,1\r\n0.277210773,0,23.89048597,570.7553198,9.5,1,1,14,7.2,1,1,14,0,1,0,0\r\n0.167054085,0,35.60848734,1267.964371,13,1,1,14,11,1,1,14,0,0,0,0\r\n0.29321504,0,58.13278576,3379.420781,10.27,1,1,12,7.66,1,1,12,0,21,0,1\r\n-0.123858579,2,63.71800137,4059.983699,15,1,1,15,16.97783688,1,1,13,1,-3,0,0\r\n-1.272965676,-3,42.0862423,1771.251791,14,1,1,16,50,1,1,19,-3,-13,-1,0\r\n0.113328685,1,23.00068446,529.0314858,14,1,1,14,12.5,1,1,13,1,-3.5,0,1\r\n0,0,19.89869952,395.9582426,6,1,1,13,6,1,1,13,0,-0.084,0,0\r\n0.336472237,0,24.73100616,611.6226657,5,1,1,18,3.571428571,1,1,18,0,-0.148,0,0\r\n0,0,28.73648186,825.7853898,12,1,0,16,12,1,0,16,0,4,-1,0\r\n-0.317448897,-1,56.47912389,3189.891435,10.5,1,0,12,14.423,1,0,13,5,4.5,1,0\r\n0.055688906,-1,61.47022587,3778.588669,12,1,0,13,11.35,1,0,14,0,3,0,-1\r\n0.388423642,0,42.12183436,1774.24893,28.57142857,1,0,18,19.375,1,0,18,0,1,0,0\r\n-0.406894701,-2,33.7412731,1138.473511,11.65,1,1,14,17.5,1,1,16,-2,-4,0,0\r\n-0.139761942,0,21.80424367,475.425042,5,1,1,13,5.75,1,1,13,-2,-0.583,0,0\r\n0,0,39.35112936,1548.511382,11,1,0,12,11,1,0,12,0,0,1,0\r\n.,0,70.54346338,4976.380226,5.833333334,1,1,8,.,1,1,8,0,-4,0,0\r\n0,0,24.61054073,605.6787148,7,1,1,18,7,1,1,18,0,-0.5,0,0\r\n0.354171814,2,31.45790554,989.5998212,30,1,0,16,21.05263158,1,0,14,2,0.5,0,1\r\n0.101782694,1,30.65297741,939.6050243,7.75,1,0,14,7,1,0,13,-1,-0.333,-1,0\r\n0.161268148,0,31.89869952,1017.527031,11.75,1,0,15,10,1,0,15,1,2,0,0\r\n0.693147181,0,37.72210815,1422.957443,5,1,0,16,2.5,1,0,16,0,-3.5,-1,0\r\n-0.51366603,-1,33.59069131,1128.334543,11.25,0,0,15,18.80333333,0,0,16,-4,4,1,1\r\n0.167054085,0,32.29021218,1042.657803,32.5,0,0,16,27.5,0,0,16,0,4.5,0,0\r\n-0.684692793,-2,33.46201232,1119.706269,2.909090909,1,1,12,5.7692,1,1,14,0,0,0,0\r\n.,1,27.13483915,736.2994958,23.75,1,0,20,.,1,0,19,3,3,0,1\r\n0,-1,30.81998631,949.8715562,15,1,0,15,15,1,0,16,-2,-2.981,0,1\r\n0.029741969,0,32.34770705,1046.374151,6.5,1,0,12,6.30952381,1,0,12,0,3.5,0,0\r\n.,2,40.862423,1669.737613,.,1,0,16,.,1,0,14,-1,-0.5,0,0\r\n1.966112856,0,30.35181383,921.2326025,25,1,0,12,3.5,1,0,12,0,8.833,0,0\r\n0.173609616,3,44.7063655,1998.659117,8,1,0,18,6.725,1,0,15,4,-0.833,0,0\r\n-0.276253377,7,31.80835045,1011.771158,11,1,1,19,14.5,1,1,12,7,-9,0,0\r\n2.109746891,0,19.22245038,369.5025985,61.53846154,1,1,12,7.462686567,1,1,12,0,3.25,0,0\r\n0.262364265,0,40.50102669,1640.333163,11.81818182,1,1,16,9.090909091,1,1,16,0,-4,1,0\r\n-0.500462837,0,61.95756331,3838.739652,4.85,1,0,13,8,1,0,13,0,-17,0,1\r\n-0.798507696,-1,26.66940452,711.2571373,5,1,0,15,11.11111111,1,0,16,-1,-0.461,0,0\r\n.,0,65.98494182,4354.012547,.,1,1,10,.,1,1,10,0,3,0,-1\r\n-0.001153403,0,44.84873374,2011.408918,17.33,1,1,13,17.35,1,1,13,0,0,0,0\r\n0.014888613,0,29.18548939,851.792791,10.15,0,1,12,10,1,1,12,0,4.583,-1,0\r\n.,0,56.8569473,3232.712456,.,1,1,12,16.5,1,1,12,0,-14.5,0,-1\r\n.,-2,55.91238878,3126.195219,20,1,1,12,.,1,1,14,-1,29,0,1\r\n.,0,72,5184,.,1,0,12,.,1,0,12,0,-4,0,0\r\n0.138304671,-1,41.08418891,1687.910579,12,1,0,13,10.45,1,0,14,4,2,0,1\r\n-0.223143551,1,30.45037645,927.2254262,10,1,0,15,12.5,0,0,14,0,-3,-1,0\r\n-0.693147181,-4,51.84120465,2687.5105,7.5,1,0,12,15,1,0,16,-4,-2,1,0\r\n0.498991166,0,20.42984257,417.3784676,7,1,0,14,4.25,1,0,14,0,-1.917,0,0\r\n0.099974609,-4,32.35865845,1047.082777,9.67,1,0,12,8.75,1,0,16,-4,12,0,0\r\n-0.080487251,0,50.14921287,2514.943551,6.92,1,0,12,7.5,1,0,12,0,13,-1,0\r\n-0.980829253,-2,42.54893908,1810.412217,11.25,1,1,16,30,1,1,18,-6,-0.5,-1,0\r\n0.265703166,0,27.74811773,769.9580374,8.695652174,1,1,12,6.666666667,1,1,12,0,.,0,0\r\n.,-4,62.57905544,3916.13818,.,0,1,12,12,0,1,16,0,-7.75,0,0\r\n-0.627007378,-1,24.62422998,606.3527021,5,1,1,15,9.36,1,1,16,-1,-0.417,-1,1\r\n-0.393042588,-1,57.68651609,3327.734138,7.5,1,1,12,11.11111111,1,1,13,0,1,0,-1\r\n0.251314428,0,42.85010267,1836.131299,18,1,1,16,14,1,1,16,0,1,0,0\r\n-0.470003629,0,37.28405202,1390.100535,5,1,0,12,8,1,0,12,0,-15.5,0,0\r\n-0.980829253,0,45.39356605,2060.575839,37.5,1,1,14,100,1,1,14,-2,-2,0,0\r\n-0.051837282,2,32.84325804,1078.679599,8.27,1,0,16,8.71,1,0,14,-2,0,0,0\r\n.,0,28.69267625,823.2696703,.,1,1,16,.,1,1,16,0,-0.5,0,0\r\n0,1,37.02395619,1370.773332,10.5,1,1,13,10.5,1,1,12,1,-6.417,0,0\r\n0,0,37.83983573,1431.853168,5,1,1,14,5,1,1,14,0,0,0,0\r\n-0.047252885,0,31.06639288,965.1207667,6.613333333,1,1,16,6.933333333,1,1,16,0,-0.3,0,0\r\n0.117783036,-3,30.14921287,908.9750366,6.75,1,1,12,6,1,1,15,2,6.5,0,0\r\n.,1,78.64202601,6184.568255,.,1,1,13,.,1,1,12,-1,15,1,0\r\n0.117783036,2,37.85078713,1432.682087,18,1,1,15,16,1,1,13,0,4,0,0\r\n0,-1,21.7412731,472.682956,5,1,0,13,5,1,0,14,1,0,0,0\r\n-0.046520016,-2,42.770705,1829.333206,21,1,1,14,22,1,1,16,-3,-1.5,0,0\r\n-0.117783036,0,33.03764545,1091.486017,16,1,1,15,18,1,1,15,0,-8,0,-1\r\n0.481266822,-1,27.41957563,751.8331279,10,1,0,12,6.18,1,0,13,0,4.5,0,0\r\n.,1,28.11498973,790.4526477,70,1,1,16,.,1,1,15,2,1,0,0\r\n0.315852949,0,47.74264203,2279.359868,8.571428572,1,0,10,6.25,1,0,10,0,7,0,0\r\n.,0,79.12388775,6260.589612,.,1,0,12,.,1,0,12,0,26,0,0\r\n-0.195744577,0,51.33196441,2634.97057,22.22222222,1,1,18,27.02702703,1,1,18,0,5,0,0\r\n.,0,34.35181383,1180.047113,.,1,0,12,6,1,0,12,0,1.833,0,0\r\n0.182321557,-1,36.94182067,1364.698115,15.6,1,1,15,13,1,1,16,-2,0,1,-1\r\n0.162840421,-1,33.40725531,1116.044707,10.98,1,1,13,9.33,1,1,14,0,-3.75,0,0\r\n0.242510354,0,34.86652977,1215.674899,9.25,1,1,14,7.258064516,1,1,14,1,-2,-1,1\r\n-0.693147181,0,31.03080082,962.9105996,6.25,1,0,12,12.5,1,0,12,0,-11.5,1,0\r\n0,3,41.35797399,1710.482013,17.5,1,0,16,17.5,1,0,13,3,4.333,-1,0\r\n-0.724069091,-3,43.01984942,1850.707444,6.05,1,0,12,12.48,1,0,15,-3,-18,0,0\r\n-1.078809661,0,35.13483915,1234.456922,4.42,1,0,12,13,1,0,12,0,-12,0,-1\r\n.,0,34.68309377,1202.916994,.,1,1,20,149.51925,1,1,20,0,2,0,0\r\n0.673344553,0,24.83778234,616.9154316,8.333333333,1,1,12,4.25,1,1,12,-1,3.583,0,0\r\n-0.133531393,-2,28.53114305,814.0261239,7,1,0,12,8,1,0,14,0,-1,-1,0\r\n-0.378984231,-2,27.27720739,744.0460431,6.25,1,0,12,9.13,1,0,14,-2,-2,-1,0\r\n0.100916464,4,43.42231348,1885.497308,26,1,0,20,23.50422222,1,0,16,4,1,-1,0\r\n1.280933846,2,31.76728268,1009.160249,60,1,1,18,16.66666667,1,1,16,2,-6.5,0,1\r\n.,5,27.94798084,781.0896328,.,1,0,18,5.39516129,1,0,13,3,0.334,0,0\r\n-0.421525916,5,32.44626968,1052.760416,7,1,1,20,10.67,1,1,15,2,-9,0,-1\r\n0.405465108,-1,22.47227926,505.0033352,7.5,1,0,15,5,1,0,16,-1,2.981,0,0\r\n-0.510825624,-2,40.35865845,1628.821312,7.5,1,0,12,12.5,1,0,14,-2,-19,0,0\r\n1.366491734,2,43.3045859,1875.28716,33.33333333,1,0,18,8.5,1,0,16,3,1,0,0\r\n0.465447813,0,50.54893908,2555.195242,8.76,1,0,12,5.5,1,0,12,0,0,0,0\r\n0.46203546,1,44.21902806,1955.322443,11.11111111,1,0,13,7,1,0,12,-1,3.75,1,0\r\n0.70151543,4,27.23066393,741.509058,24,1,1,16,11.9,1,1,12,4,-1,0,-1\r\n0.546930628,0,36.36413416,1322.350253,11.75,1,1,12,6.8,1,1,12,0,15,0,0\r\n0.693147181,0,36.48186174,1330.926236,10,1,0,12,5,1,0,12,-2,0.667,0,0\r\n0.248462959,0,25.17727584,633.8952187,9.6154,1,1,16,7.5,1,1,16,0,-2.583,0,0\r\n.,0,60.97193703,3717.577105,.,1,0,12,6,1,0,12,0,23,0,0\r\n0.182321557,-2,64.13963039,4113.892187,18,1,1,16,15,1,1,18,-2,22.458,0,0\r\n.,-1,64.45995893,4155.086306,.,0,0,11,.,0,0,12,1,-21,1,1\r\n.,0,61.33607118,3762.113628,.,1,0,12,3,1,0,12,1,13.5,1,0\r\n0.133531393,0,28.15331964,792.609407,10,1,0,15,8.75,1,0,15,1,1,-1,0\r\n0.519875459,0,50.05065024,2505.067589,11.5625,1,0,12,6.875,1,0,12,0,2.5,0,-1\r\n0.049122045,0,25.94113621,672.9425478,16.42857143,1,0,12,15.64106667,1,0,12,0,0,0,0\r\n0.619039208,-7,31.20876112,973.9867708,13,0,0,8,7,1,0,15,7,-7,0,-1\r\n0.287682073,2,26.92676249,725.0505383,13.33333333,1,1,16,10,1,1,14,2,-2.5,-1,0\r\n1.32175584,1,25.54140999,652.3636244,6.25,1,0,13,1.666666667,1,0,12,1,0,0,0\r\n.,0,52.55030801,2761.534872,.,1,0,12,5.952380953,1,0,12,0,0,0,0\r\n0,0,40.8733744,1670.632735,20,0,1,12,20,0,1,12,0,4.5,-1,0\r\n.,1,33.25119781,1105.642156,9.6,1,0,13,.,1,0,12,0,-2,0,0\r\n-0.057158414,0,48.24914442,2327.979937,4.25,1,0,12,4.5,1,0,12,0,-2.993,0,0\r\n-0.732367894,-1,37.28131417,1389.896386,5,1,0,12,10.4,1,0,13,-1,-7.5,-1,0\r\n.,-1,70.60095825,4984.495306,.,1,1,12,6.868095238,1,1,13,0,13,0,-1\r\n-0.322773392,0,29.05407255,844.1391319,10.5,1,1,13,14.5,1,1,13,0,-3.5,0,0\r\n-0.894651557,-4,30.22587269,913.6033799,5.45,1,0,12,13.33333333,1,0,16,-4,2.5,-1,1\r\n.,1,52.98562628,2807.476593,14.28571429,1,1,13,.,1,1,12,0,3,0,0\r\n-0.615957542,-1,37.3744011,1396.845857,9.722222222,1,1,12,18,1,1,13,0,-6,0,-1\r\n0.287682073,-1,21.92744695,480.8129299,6.666666667,1,0,12,5,1,0,13,0,1.75,0,0\r\n0.343771539,0,23.96988364,574.5553218,10.57692308,1,0,16,7.5,1,0,16,0,0.038,0,0\r\n0.284451052,0,36.37234771,1322.947678,10.3,1,1,18,7.75,1,1,18,0,2,0,0\r\n.,0,22.29979466,497.2808419,.,1,0,12,20,1,0,12,0,0,0,0\r\n0.022927505,0,36.94455852,1364.900404,15,1,0,16,14.66,1,0,16,0,1.5,1,0\r\n0.518260602,4,43.20054757,1866.28731,11.25,1,0,14,6.7,1,0,10,3,14.67,1,0\r\n0,0,18.7816564,352.7506171,4.25,1,0,13,4.25,1,0,13,0,-0.083,0,0\r\n0.310154928,2,36.62149213,1341.133686,13.63636364,1,0,14,10,1,0,12,2,1,0,0\r\n0.372250629,2,45.61259411,2080.508742,22.32285714,1,0,14,15.3845,1,0,12,2,-4,1,0\r\n0.093011748,0,29.3908282,863.8207823,4.5,1,0,12,4.100322581,1,0,12,0,3.5,1,0\r\n-0.087016892,-1,38.770705,1503.167566,21.1538,1,0,13,23.077,1,0,14,-1,2,1,0\r\n0.109904862,0,45.55509925,2075.267067,20.60625,1,0,12,18.46153846,1,0,12,0,-7,-1,0\r\n.,0,26.37645448,695.7173511,.,1,1,16,19.65,1,1,16,0,-0.5,0,0\r\n0.850332764,2,40.31211499,1625.066615,5.5,1,0,14,2.35,1,0,12,2,2,0,0\r\n-0.729514825,-2,28.41341547,807.3221786,7.5,1,0,14,15.55555556,1,0,16,-2,-2,0,0\r\n-0.500775288,0,28.41341547,807.3221786,9,1,0,16,14.85,1,0,16,-2,3,0,0","type":"text"}]
